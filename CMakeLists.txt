CMAKE_MINIMUM_REQUIRED(VERSION 3.16)

IF(NOT DEFINED ENV{Qt6_DIR})
    MESSAGE(FATAL, "Qt6_DIR not found")
ELSE()
    SET(CMAKE_PREFIX_PATH $ENV{Qt6_DIR})
ENDIF()

SET(PROJECT_GENERATED_INCLDUE_PATH ${CMAKE_CURRENT_BINARY_DIR}/generated)
SET(PROJECT_BIN_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(PROJECT_SRC_PATH ${CMAKE_CURRENT_SOURCE_DIR}/source)

PROJECT(UseQObjectFromLib)

# Set C++ Standard
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

FIND_PACKAGE(Qt6 REQUIRED COMPONENTS Core)

QT_STANDARD_PROJECT_SETUP()

QT_ADD_LIBRARY(
    CompA SHARED
    source/CompA/ClassA.h
    source/CompA/ClassA.cpp
)

QT_ADD_LIBRARY(
    CompB SHARED
    source/CompB/ClassB.h
    source/CompB/ClassB.cpp
)

QT_ADD_LIBRARY(
    CompC SHARED
    source/CompC/ClassC.h
    source/CompC/ClassC.cpp
)

QT_ADD_LIBRARY(
    CompD SHARED
    source/CompD/ClassD.h
    source/CompD/ClassD.cpp
)

QT_ADD_EXECUTABLE(
    Programm
    source/Programm/Application.h
    source/Programm/Application.cpp
    source/Programm/main.cpp
)

SET(COMPONENT_LIST CompA CompB CompC CompD)

FOREACH(COMPONENT ${COMPONENT_LIST})
    STRING(TOUPPER "${COMPONENT}" COMPNAME)
    SET(COMPOUTPATH ${PROJECT_GENERATED_INCLDUE_PATH}/${COMPONENT})

    CONFIGURE_FILE(${PROJECT_SRC_PATH}/Globals/export_tpl.h ${COMPOUTPATH}/export.h)
    
    TARGET_INCLUDE_DIRECTORIES(${COMPONENT}  PUBLIC  ${PROJECT_SRC_PATH})
    TARGET_INCLUDE_DIRECTORIES(${COMPONENT}  PUBLIC  ${PROJECT_GENERATED_INCLDUE_PATH})
    
    TARGET_COMPILE_DEFINITIONS(${COMPONENT}  PRIVATE EXPORT_${COMPNAME})
ENDFOREACH()

TARGET_INCLUDE_DIRECTORIES(Programm  PUBLIC ${PROJECT_SRC_PATH})

TARGET_LINK_LIBRARIES(CompA     PRIVATE                         Qt6::Core)
TARGET_LINK_LIBRARIES(CompB     PRIVATE CompA                   Qt6::Core)
TARGET_LINK_LIBRARIES(CompC     PRIVATE       CompB             Qt6::Core)
TARGET_LINK_LIBRARIES(CompD     PRIVATE       CompB             Qt6::Core)
TARGET_LINK_LIBRARIES(Programm  PRIVATE CompA       CompC CompD Qt6::Core)

IF(MSVC)
    SET_TARGET_PROPERTIES(CompA     PROPERTIES PDB_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(CompB     PROPERTIES PDB_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(CompC     PROPERTIES PDB_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(CompD     PROPERTIES PDB_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(Programm  PROPERTIES PDB_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    
    SET_TARGET_PROPERTIES(CompA     PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(CompB     PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(CompC     PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(CompD     PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
    SET_TARGET_PROPERTIES(Programm  PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BIN_PATH})
ENDIF(MSVC)

ADD_CUSTOM_COMMAND(
    TARGET Programm
    POST_BUILD
    COMMAND CD $<$<CONFIG:Debug>:${PROJECT_BIN_PATH}/Debug>$<$<CONFIG:Release>:${PROJECT_BIN_PATH}/Release> && ${WINDEPLOYQT_EXECUTABLE} Programm.exe --verbose 1 --dir . --plugindir plugins --no-translations --compiler-runtime
    )

QT_FINALIZE_PROJECT()
